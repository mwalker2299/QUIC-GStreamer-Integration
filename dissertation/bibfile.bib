@INPROCEEDINGS{GNURadio,

  author={Nimmi, S. and Saranya, V. and Theerthadas and Gandhiraj, R.},

  booktitle={2014 International Conference on Green Computing Communication and Electrical Engineering (ICGCCEE)}, 

  title={Real-time video streaming using GStreamer in GNU Radio platform}, 

  year={2014},

  doi={10.1109/ICGCCEE.2014.6922233}
}
@inproceedings{imageFusion,
author = {Stephen D. Burks and Joshua M. Doe},
title = {{GStreamer as a framework for image processing applications in image fusion}},
volume = {8064},
booktitle = {Multisensor, Multisource Information Fusion: Architectures, Algorithms, and Applications 2011},
editor = {Jerome J. Braun},
organization = {International Society for Optics and Photonics},
publisher = {SPIE},
pages = {180 -- 186},
keywords = {GStreamer, Image Fusion, Image Capture},
year = {2011},
doi = {},
URL = {https://doi.org/10.1117/12.884797}
}

@INPROCEEDINGS{Hollywood,

  author={McQuistin, Stephen and Perkins, Colin and Fayed, Marwan},

  booktitle={2016 IFIP Networking Conference (IFIP Networking) and Workshops}, 

  title={TCP Hollywood: An unordered, time-lined, TCP for networked multimedia applications}, 

  year={2016},

  volume={},

  number={},

  pages={422-430},

  doi={10.1109/IFIPNetworking.2016.7497221}}

  @inproceedings{ClipStream,
  author = {Palmer, Mirko and Kr\"{u}ger, Thorben and Chandrasekaran, Balakrishnan and Feldmann, Anja},
  title = {The QUIC Fix for Optimal Video Streaming},
  year = {2018},
  isbn = {9781450360821},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3284850.3284857},
  doi = {10.1145/3284850.3284857},
  abstract = {Within a few years of its introduction, QUIC has gained traction: a significant chunk of traffic is now delivered over QUIC. The networking community is actively engaged in debating the fairness, performance, and applicability of QUIC for various use cases, but these debates are centered around a narrow, common theme: how does the new reliable transport built on top of UDP fare in different scenarios? Evaluation of unreliable delivery in QUIC remains largely unexplored.The option for delivering content unreliably, as in a best-effort model, deserves the QUIC designers' and the QUIC community's attention. We propose extending QUIC to support unreliable streams and discuss a simple use case of video streaming---an application that dominates the overall Internet traffic---that can leverage the unreliable streams and potentially bring immense benefits to network operators and content providers. We demonstrate, using controlled-environment trials, how to combine reliable and unreliable streams to outperform TCP and QUIC in video streaming.},
  booktitle = {Proceedings of the Workshop on the Evolution, Performance, and Interoperability of QUIC},
  pages = {43â€“49},
  numpages = {7},
  keywords = {Video Streaming, QUIC, Partial Reliability},
  location = {Heraklion, Greece},
  series = {EPIQ'18}
  }

  @misc{RFC4571,
	series =	{Request for Comments},
	number =	4571,
	howpublished =	{RFC 4571},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC4571},
	url =		{https://www.rfc-editor.org/info/rfc4571},
        author =	{John Lazzaro},
	title =		{{Framing Real-time Transport Protocol (RTP) and RTP Control Protocol (RTCP) Packets over Connection-Oriented Transport}},
	pagetotal =	9,
	year =		2006,
	month =		jul,
	abstract =	{This memo defines a method for framing Real-time Transport Protocol (RTP) and RTP Control Protocol (RTCP) packets onto connection-oriented transport (such as TCP). The memo also defines how session descriptions may specify RTP streams that use the framing method. {[}STANDARDS-TRACK{]}},
  key = {Stream based RTP}
}

@misc {OFCOM,
author = {Ofcom},
year = {2019-05-08},
url = {https://www.ofcom.org.uk/__data/assets/pdf_file/0020/147332/home-broadband-report-2018.pdf}
}

@INPROCEEDINGS{LOWDASH,

  author={Bouzakaria, Nassima and Concolato, Cyril and Le Feuvre, Jean},

  booktitle={IISA 2014, The 5th International Conference on Information, Intelligence, Systems and Applications}, 

  title={Overhead and performance of low latency live streaming using MPEG-DASH}, 

  year={2014},

  volume={},

  number={},

  pages={92-97},

  doi={10.1109/IISA.2014.6878732}}


@misc{RFC8868,
	series =	{Request for Comments},
	number =	8868,
	howpublished =	{RFC 8868},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC8868},
	url =		{https://www.rfc-editor.org/info/rfc8868},
        author =	{Varun Singh and Joerg Ott and Stefan Holmer},
	title =		{{Evaluating Congestion Control for Interactive Real-Time Media}},
	pagetotal =	13,
	year =		2021,
	month =		jan,
	abstract =	{The Real-Time Transport Protocol (RTP) is used to transmit media in telephony and video conferencing applications. This document describes the guidelines to evaluate new congestion control algorithms for interactive point-to-point real-time media.},
}



@misc{DevManual,
    author =       {Wim Taymans and Steve Baker and Andy Wingo and Ronald S. Bultje and Stefan Kost},
    title =        {GStreamer Application Development Manual (1.2.3)},
    url =          {https://www.academia.edu/24635390/GStreamer_Application_Development_Manual_1_2_3},
    year = {2013},
    note    =      {Last accessed on 2022-03-08}
}
@misc{QUICJim,
    author =       {Jim Roskind},
    title =        {MULTIPLEXED STREAM TRANSPORT OVER UDP},
    url =          {https://docs.google.com/document/d/1RNHkx_VvKWyWg6Lr8SZ-saqsQx7rFV-ev2jRFUoVD34/edit},
    year = {2012},
    note    =      {Last accessed on 2022-03-08}
}

@misc{rfc9000,
	series =	{Request for Comments},
	number =	9000,
	howpublished =	{RFC 9000},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC9000},
	url =		{https://rfc-editor.org/rfc/rfc9000.txt},
        author =	{Jana Iyengar and Martin Thomson},
	title =		{{QUIC: A UDP-Based Multiplexed and Secure Transport}},
	pagetotal =	151,
	year =		2021,
	month =		may,
	abstract =	{This document defines the core of the QUIC transport protocol. QUIC provides applications with flow-controlled streams for structured communication, low-latency connection establishment, and network path migration. QUIC includes security measures that ensure confidentiality, integrity, and availability in a range of deployment circumstances. Accompanying documents describe the integration of TLS for key negotiation, loss detection, and an exemplary congestion control algorithm.},
}
@misc{rfc8999,
	series =	{Request for Comments},
	number =	8999,
	howpublished =	{RFC 8999},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC8999},
	url =		{https://rfc-editor.org/rfc/rfc8999.txt},
        author =	{Martin Thomson},
	title =		{{Version-Independent Properties of QUIC}},
	pagetotal =	9,
	year =		2021,
	month =		may,
	abstract =	{This document defines the properties of the QUIC transport protocol that are common to all versions of the protocol.},
}
@misc{rfc9001,
	series =	{Request for Comments},
	number =	9001,
	howpublished =	{RFC 9001},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC9001},
	url =		{https://rfc-editor.org/rfc/rfc9001.txt},
        author =	{Martin Thomson and Sean Turner},
	title =		{{Using TLS to Secure QUIC}},
	pagetotal =	52,
	year =		2021,
	month =		may,
	abstract =	{This document describes how Transport Layer Security (TLS) is used to secure QUIC.},
}
@misc{rfc9002,
	series =	{Request for Comments},
	number =	9002,
	howpublished =	{RFC 9002},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC9002},
	url =		{https://rfc-editor.org/rfc/rfc9002.txt},
        author =	{Jana Iyengar and Ian Swett},
	title =		{{QUIC Loss Detection and Congestion Control}},
	pagetotal =	42,
	year =		2021,
	month =		may,
	abstract =	{This document describes loss detection and congestion control mechanisms for QUIC.},
}
@misc{IP,
	series =	{Request for Comments},
	number =	791,
	howpublished =	{RFC 791},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0791},
	url =		{https://www.rfc-editor.org/info/rfc791},
        author =	{},
	title =		{{Internet Protocol}},
	pagetotal =	51,
	year =		1981,
	month =		sep,
	abstract =	{},
  key = {IP}
}
@misc{TCP,
	series =	{Request for Comments},
	number =	793,
	howpublished =	{RFC 793},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0793},
	url =		{https://www.rfc-editor.org/info/rfc793},
        author =	{},
	title =		{{Transmission Control Protocol}},
	pagetotal =	91,
	year =		1981,
	month =		sep,
	abstract =	{},
  key = {TCP}
}
@inproceedings{gQUIC,
author = {Langley, Adam and Riddoch, Alistair and Wilk, Alyssa and Vicente, Antonio and Krasic, Charles and Zhang, Dan and Yang, Fan and Kouranov, Fedor and Swett, Ian and Iyengar, Janardhan and Bailey, Jeff and Dorfman, Jeremy and Roskind, Jim and Kulik, Joanna and Westin, Patrik and Tenneti, Raman and Shade, Robbie and Hamilton, Ryan and Vasiliev, Victor and Chang, Wan-Teh and Shi, Zhongyi},
title = {The QUIC Transport Protocol: Design and Internet-Scale Deployment},
year = {2017},
isbn = {9781450346535},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3098822.3098842},
doi = {10.1145/3098822.3098842},
abstract = {We present our experience with QUIC, an encrypted, multiplexed, and low-latency transport
protocol designed from the ground up to improve transport performance for HTTPS traffic
and to enable rapid deployment and continued evolution of transport mechanisms. QUIC
has been globally deployed at Google on thousands of servers and is used to serve
traffic to a range of clients including a widely-used web browser (Chrome) and a popular
mobile video streaming app (YouTube). We estimate that 7% of Internet traffic is now
QUIC. We describe our motivations for developing a new transport, the principles that
guided our design, the Internet-scale process that we used to perform iterative experiments
on QUIC, performance improvements seen by our various services, and our experience
deploying QUIC globally. We also share lessons about transport design and the Internet
ecosystem that we learned from our deployment.},
booktitle = {Proceedings of the Conference of the ACM Special Interest Group on Data Communication},
pages = {183â€“196},
numpages = {14},
location = {Los Angeles, CA, USA},
series = {SIGCOMM '17}
}
@online{MotQUIC,
    author =       {Mark Nottingham},
    title =        {IETF | What's Happening with QUIC},
    url =          {https://www.ietf.org/blog/whats-happening-quic/},
    year =         {2018-10-29},
    note    =      {Last accessed on 2022-03-08}
}
@INPROCEEDINGS{HOLBlocking,

  author={Scharf, Michael and Kiesel, Sebastian},

  booktitle={IEEE Globecom 2006}, 

  title={NXG03-5: Head-of-line Blocking in TCP and SCTP: Analysis and Measurements}, 

  year={2006},

  volume={},

  number={},

  pages={1-5},

  doi={10.1109/GLOCOM.2006.333}
}
@misc{OPERA,
    author =       {Lucian Parfeni},
    title =        {The First Opera 16 Next Brings an Experimental "Flags" Section},
    url =          {https://news.softpedia.com/news/The-First-Opera-16-Next-Brings-an-Experimental-quot-Flags-quot-Section-369541.shtml},
    year =         {2013-07-19},
    note    =      {Last accessed on 2022-03-08}
}
@misc{FIREFOX,
    author =       {Dragana Damjanovic},
    title =        {QUIC and HTTP/3 Support now in Firefox Nightly and Beta},
    url =          {https://hacks.mozilla.org/2021/04/quic-and-http-3-support-now-in-firefox-nightly-and-beta/},
    year =         {2021-04-16},
    note    =      {Last accessed on 2022-03-08}
}
@misc{SAFARI,
    title =        {Safari 14 Release Notes},
    url =          {https://developer.apple.com/documentation/safari-release-notes/safari-14-release-notes},
    note    =      {Last accessed on 2022-03-08},
    key = {safari}
}
@online{FACEBOOK,
    author =       {Matt Joras and Yang Chi},
    title =        {How Facebook is bringing QUIC to billions},
    url =          {https://engineering.fb.com/2020/10/21/networking-traffic/how-facebook-is-bringing-quic-to-billions/},
    year =         {2020-10-21},
    note    =      {Last accessed on 2022-03-08}
}
@misc{LIVESURVEY,
  author = {Mark Jackson},
  title = {Broadcast Lag in Live Online TV Sport Streaming Frustrates Fans},
  url = {https://www.ispreview.co.uk/index.php/2021/06/broadcast-lag-in-live-online-tv-sport-streaming-frustrates-fans.html},
  year = {2021-06-10},
  note    =      {Last accessed on 2022-03-08},
}

@INPROCEEDINGS{FrameRecovery,

  author={Orosz, PÃ©ter and SkopkÃ³, TamÃ¡s and Varga, PÃ¡l},

  booktitle={2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)}, 

  title={Towards estimating video QoE based on frame loss statistics of the video streams}, 

  year={2015},

  volume={},

  number={},

  pages={1282-1285},

  doi={10.1109/INM.2015.7140482}
}


@misc{UDP,
	series =	{Request for Comments},
	number =	768,
	howpublished =	{RFC 768},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC0768},
	url =		{https://www.rfc-editor.org/info/rfc768},
  author =	{Jon Postel},
	title =		{{User Datagram Protocol}},
	pagetotal =	3,
	year =		1980,
	month =		aug,
	abstract =	{},
  key = {UDP}
}
@techreport{HTTP3,
	number =	{draft-ietf-quic-http-34},
	type =		{Internet-Draft},
	institution =	{Internet Engineering Task Force},
	publisher =	{Internet Engineering Task Force},
	note =		{Work in Progress},
	url =		{https://datatracker.ietf.org/doc/html/draft-ietf-quic-http-34},
        author =	{Mike Bishop},
	title =		{{Hypertext Transfer Protocol Version 3 (HTTP/3)}},
	pagetotal =	75,
	year =		2021,
	month =		feb,
	day =		2,
	abstract =	{The QUIC transport protocol has several features that are desirable in a transport for HTTP, such as stream multiplexing, per-stream flow control, and low-latency connection establishment. This document describes a mapping of HTTP semantics over QUIC. This document also identifies HTTP/2 features that are subsumed by QUIC, and describes how HTTP/2 extensions can be ported to HTTP/3. DO NOT DEPLOY THIS VERSION OF HTTP DO NOT DEPLOY THIS VERSION OF HTTP/3 UNTIL IT IS IN AN RFC. This version is still a work in progress. For trial deployments, please use earlier versions. Note to Readers Discussion of this draft takes place on the QUIC working group mailing list (quic@ietf.org), which is archived at https://mailarchive.ietf.org/arch/search/?email\_list=quic. Working Group information can be found at https://github.com/quicwg; source code and issues list for this draft can be found at https://github.com/quicwg/base-drafts/labels/-http.},
}
@inproceedings{Fukuda,
  author    = {Kensuke Fukuda},
  editor    = {Jordi Domingo{-}Pascual and
               Yuval Shavitt and
               Steve Uhlig},
  title     = {An Analysis of Longitudinal {TCP} Passive Measurements (Short Paper)},
  booktitle = {Traffic Monitoring and Analysis - Third International Workshop, {TMA}
               2011, Vienna, Austria, April 27, 2011. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {6613},
  pages     = {29--36},
  publisher = {Springer},
  year      = {2011},
  url       = {https://doi.org/10.1007/978-3-642-20305-3\_3},
  doi       = {10.1007/978-3-642-20305-3\_3},
  timestamp = {Sun, 25 Jul 2021 11:51:22 +0200},
  biburl    = {https://dblp.org/rec/conf/tma/Fukuda11.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{CUBIC,
	series =	{Request for Comments},
	number =	8312,
	howpublished =	{RFC 8312},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC8312},
	url =		{https://www.rfc-editor.org/info/rfc8312},
        author =	{Injong Rhee and Lisong Xu and Sangtae Ha and Alexander Zimmermann and Lars Eggert and Richard Scheffenegger},
	title =		{{CUBIC for Fast Long-Distance Networks}},
	pagetotal =	18,
	year =		2018,
	month =		feb,
	abstract =	{CUBIC is an extension to the current TCP standards. It differs from the current TCP standards only in the congestion control algorithm on the sender side. In particular, it uses a cubic function instead of a linear window increase function of the current TCP standards to improve scalability and stability under fast and long-distance networks. CUBIC and its predecessor algorithm have been adopted as defaults by Linux and have been used for many years. This document provides a specification of CUBIC to enable third-party implementations and to solicit community feedback through experimentation on the performance of CUBIC.},
}

@techreport{BBR,
	number =	{draft-cardwell-iccrg-bbr-congestion-control-02},
	type =		{Internet-Draft},
	institution =	{Internet Engineering Task Force},
	publisher =	{Internet Engineering Task Force},
	note =		{Work in Progress},
	url =		{https://datatracker.ietf.org/doc/html/draft-cardwell-iccrg-bbr-congestion-control-02},
        author =	{Neal Cardwell and Yuchung Cheng and Soheil Hassas Yeganeh and Ian Swett and Van Jacobson},
	title =		{{BBR Congestion Control}},
	pagetotal =	66,
	year =		2022,
	month =		mar,
	day =		7,
	abstract =	{This document specifies the BBR congestion control algorithm. BBR ("Bottleneck Bandwidth and Round-trip propagation time") uses recent measurements of a transport connection's delivery rate, round-trip time, and packet loss rate to build an explicit model of the network path. BBR then uses this model to control both how fast it sends data and the maximum volume of data it allows in flight in the network at any time. Relative to loss-based congestion control algorithms such as Reno {[}RFC5681{]} or CUBIC {[}RFC8312{]}, BBR offers substantially higher throughput for bottlenecks with shallow buffers or random losses, and substantially lower queueing delays for bottlenecks with deep buffers (avoiding "bufferbloat"). BBR can be implemented in any transport protocol that supports packet-delivery acknowledgment. Thus far, open source implementations are available for TCP {[}RFC793{]} and QUIC {[}RFC9000{]}. This document specifies version 2 of the BBR algorithm, also sometimes referred to as BBRv2 or bbr2.},
}

@misc{QUICSilver,
  author = {Vivian Band},
  title = {QUICsilver: Optimising QUIC for use with Real-Time},
  url = {https://csperkins.org/research/thesis-msci-band.pdf},
  year = {2019-04-22},
  note    =      {Last accessed on 2022-03-08},
}

@article{Bufferbloat,
author = {Gettys, Jim and Nichols, Kathleen},
title = {Bufferbloat: Dark Buffers in the Internet: Networks without Effective AQM May Again Be Vulnerable to Congestion Collapse.},
year = {2011},
issue_date = {November 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {11},
issn = {1542-7730},
url = {https://doi.org/10.1145/2063166.2071893},
doi = {10.1145/2063166.2071893},
abstract = {Todayâ€™s networks are suffering from unnecessary latency and poor system performance. The culprit is bufferbloat, the existence of excessively large and frequently full buffers inside the network. Large buffers have been inserted all over the Internet without sufficient thought or testing. They damage or defeat the fundamental congestion-avoidance algorithms of the Internetâ€™s most common transport protocol. Long delays from bufferbloat are frequently attributed incorrectly to network congestion, and this misinterpretation of the problem leads to the wrong solutions being proposed.},
journal = {Queue},
month = {nov},
pages = {40â€“54},
numpages = {15}
}

@article{TCP_INIT,
author = {Dukkipati, Nandita and Refice, Tiziana and Cheng, Yuchung and Chu, Jerry and Herbert, Tom and Agarwal, Amit and Jain, Arvind and Sutin, Natalia},
title = {An Argument for Increasing TCP's Initial Congestion Window},
year = {2010},
issue_date = {July 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {3},
issn = {0146-4833},
url = {https://doi.org/10.1145/1823844.1823848},
doi = {10.1145/1823844.1823848},
abstract = {TCP flows start with an initial congestion window of at most four segments or approximately 4KB of data. Because most Web transactions are short-lived, the initial congestion window is a critical TCP parameter in determining how quickly flows can finish. While the global network access speeds increased dramatically on average in the past decade, the standard value of TCP's initial congestion window has remained unchanged.In this paper, we propose to increase TCP's initial congestion window to at least ten segments (about 15KB). Through large-scale Internet experiments, we quantify the latency benefits and costs of using a larger window, as functions of network bandwidth, round-trip time (RTT), bandwidth-delay product (BDP), and nature of applications. We show that the average latency of HTTP responses improved by approximately 10% with the largest benefits being demonstrated in high RTT and BDP networks. The latency of low bandwidth networks also improved by a significant amount in our experiments. The average retransmission rate increased by a modest 0.5%, with most of the increase coming from applications that effectively circumvent TCP's slow start algorithm by using multiple concurrent connections. Based on the results from our experiments, we believe the initial congestion window should be at least ten segments and the same be investigated for standardization by the IETF.},
journal = {SIGCOMM Comput. Commun. Rev.},
month = {jun},
pages = {26â€“33},
numpages = {8},
keywords = {web latency, internet measurements, congestion control, tcp}
}

@misc{RTP,
	series =	{Request for Comments},
	number =	3550,
	howpublished =	{RFC 3550},
	publisher =	{RFC Editor},
	doi =		{10.17487/RFC3550},
	url =		{https://www.rfc-editor.org/info/rfc3550},
        author =	{Henning Schulzrinne and Stephen L. Casner and Ron Frederick and Van Jacobson},
	title =		{{RTP: A Transport Protocol for Real-Time Applications}},
	pagetotal =	104,
	year =		2003,
	month =		jul,
	abstract =	{This memorandum describes RTP, the real-time transport protocol. RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services. RTP does not address resource reservation and does not guarantee quality-of- service for real-time services. The data transport is augmented by a control protocol (RTCP) to allow monitoring of the data delivery in a manner scalable to large multicast networks, and to provide minimal control and identification functionality. RTP and RTCP are designed to be independent of the underlying transport and network layers. The protocol supports the use of RTP-level translators and mixers. Most of the text in this memorandum is identical to RFC 1889 which it obsoletes. There are no changes in the packet formats on the wire, only changes to the rules and algorithms governing how the protocol is used. The biggest change is an enhancement to the scalable timer algorithm for calculating when to send RTCP packets in order to minimize transmission in excess of the intended rate when many participants join a session simultaneously. {[}STANDARDS-TRACK{]}},
}